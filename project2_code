/*
  Melody

  Plays a melody

  circuit:
  - 8 ohm speaker on digital pin 8

  created 21 Jan 2010
  modified 30 Aug 2011
  by Tom Igoe

  This example code is in the public domain.

  http://www.arduino.cc/en/Tutorial/Tone
*/

#include "pitches.h"

// notes in the melody:
int melody[] = {
NOTE_C5, NOTE_AS4, NOTE_A4, NOTE_AS4, NOTE_A4, 0, NOTE_G4, NOTE_F4, NOTE_G4, NOTE_A4, 0, NOTE_G4, NOTE_G4, NOTE_F4, NOTE_G4, NOTE_F4, NOTE_A4, NOTE_G4, NOTE_C5, NOTE_AS4, NOTE_A4, NOTE_AS4, NOTE_A4, 0, NOTE_G4, NOTE_F4, NOTE_G4, NOTE_D4, 0, NOTE_G4, NOTE_F4, NOTE_G4, NOTE_F4, NOTE_A4, NOTE_G4
};

// constants won't change. They're used here to set pin numbers:
const int buttonPin = 2;     // the number of the pushbutton pin

// variables will change:
int buttonState = 0;         // variable for reading the pushbutton status

int ledState = 0;            // variable for reading the LED light status

// note durations: 4 = quarter note, 8 = eighth note, etc.:
int noteDurations[] = {
  4, 4, 4, 8, 4, 8, 4, 4, 8, 4, 8, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 8, 4, 8, 4, 4, 8, 4, 2, 4, 4, 4, 4, 4, 4
};


void setup() {
Serial.begin(9600);

// initialize pin 9 as an output for the speaker:
  pinMode(9, OUTPUT);
  // initialize the pushbutton pin as an input:
  pinMode(buttonPin, INPUT);
  // initialize digital pin LED_BUILTIN as an output.
  pinMode(LED_BUILTIN, OUTPUT);
}


void loop() {
  // read the state of the pushbutton value:
  buttonState = digitalRead(buttonPin);

   Serial.print(buttonState);
   //Serial.print(',');
   //Serial.println(LED_BUILTIN);

  // check if the pushbutton is pressed. If it is, the buttonState is HIGH:
  if (buttonState == HIGH) {

    Serial.println(" ");
    Serial.println("pressed");
    ledState = 1;
    Serial.println(ledState);
    
    // iterate over the notes of the melody:
  for (int thisNote = 0; thisNote < 36; thisNote++) {    

    // to calculate the note duration, take one second divided by the note type.
    //e.g. quarter note = 1000 / 4, eighth note = 1000/8, etc.
    int noteDuration = 1000 / noteDurations[thisNote];
    
    tone(9, melody[thisNote], noteDuration);
    
    digitalWrite(LED_BUILTIN, HIGH);
    
    // to distinguish the notes, set a minimum time between them.
    // the note's duration + 30% seems to work well:
    int pauseBetweenNotes = noteDuration * 1.30;
    
    delay(pauseBetweenNotes);
    
    digitalWrite(LED_BUILTIN, LOW);
    // stop the tone playing:
  }
  }else{
    noTone(9);
    ledState = 0;
  }
}
